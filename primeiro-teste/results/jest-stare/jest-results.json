{
  "numFailedTestSuites": 1,
  "numFailedTests": 2,
  "numPassedTestSuites": 1,
  "numPassedTests": 11,
  "numPendingTestSuites": 0,
  "numPendingTests": 0,
  "numRuntimeErrorTestSuites": 0,
  "numTodoTests": 0,
  "numTotalTestSuites": 2,
  "numTotalTests": 13,
  "openHandles": [],
  "snapshot": {
    "added": 0,
    "didUpdate": false,
    "failure": false,
    "filesAdded": 0,
    "filesRemoved": 0,
    "filesRemovedList": [],
    "filesUnmatched": 0,
    "filesUpdated": 0,
    "matched": 0,
    "total": 0,
    "unchecked": 0,
    "uncheckedKeysByFile": [],
    "unmatched": 0,
    "updated": 0
  },
  "startTime": 1719543007882,
  "success": false,
  "testResults": [
    {
      "leaks": false,
      "numFailingTests": 2,
      "numPassingTests": 5,
      "numPendingTests": 0,
      "numTodoTests": 0,
      "openHandles": [],
      "perfStats": {
        "end": 1719543009292,
        "runtime": 994,
        "slow": false,
        "start": 1719543008298
      },
      "skipped": false,
      "snapshot": {
        "added": 0,
        "fileDeleted": false,
        "matched": 0,
        "unchecked": 0,
        "uncheckedKeys": [],
        "unmatched": 0,
        "updated": 0
      },
      "testFilePath": "C:\\Users\\pflav\\gitHub\\pats_disciplina_api_01\\primeiro-teste\\test\\test-users.test.js",
      "testResults": [
        {
          "ancestorTitles": [
            "Suite de testes da api users..."
          ],
          "duration": 123,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "Suite de testes da api users... beforeAll",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 0,
          "retryReasons": [],
          "status": "passed",
          "title": "beforeAll"
        },
        {
          "ancestorTitles": [
            "Suite de testes da api users..."
          ],
          "duration": 12,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "Suite de testes da api users... Consulta todos os usuários... deve retornar status 200",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 1,
          "retryReasons": [],
          "status": "passed",
          "title": "Consulta todos os usuários... deve retornar status 200"
        },
        {
          "ancestorTitles": [
            "Suite de testes da api users..."
          ],
          "duration": 5,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "Suite de testes da api users... Consulta todos as atividades... deve retornar status 200",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 1,
          "retryReasons": [],
          "status": "passed",
          "title": "Consulta todos as atividades... deve retornar status 200"
        },
        {
          "ancestorTitles": [
            "Suite de testes da api users..."
          ],
          "duration": 38,
          "failureDetails": [
            {
              "matcherResult": {
                "message": "\u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoHaveProperty\u001b[2m(\u001b[22m\u001b[32mpath\u001b[39m\u001b[2m)\u001b[22m\n\nExpected path: \u001b[32m\"id\"\u001b[39m\nReceived path: \u001b[31m[]\u001b[39m\n\nReceived value: \u001b[31m{\"error\": \"E-mail já está em uso\"}\u001b[39m",
                "pass": false
              }
            }
          ],
          "failureMessages": [
            "Error: \u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoHaveProperty\u001b[2m(\u001b[22m\u001b[32mpath\u001b[39m\u001b[2m)\u001b[22m\n\nExpected path: \u001b[32m\"id\"\u001b[39m\nReceived path: \u001b[31m[]\u001b[39m\n\nReceived value: \u001b[31m{\"error\": \"E-mail já está em uso\"}\u001b[39m\n    at Object.toHaveProperty (C:\\Users\\pflav\\gitHub\\pats_disciplina_api_01\\primeiro-teste\\test\\test-users.test.js:59:31)\n    at processTicksAndRejections (node:internal/process/task_queues:95:5)"
          ],
          "fullName": "Suite de testes da api users... Deve cadastrar um novo usuário e deve retornar status 201",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 0,
          "retryReasons": [],
          "status": "failed",
          "title": "Deve cadastrar um novo usuário e deve retornar status 201"
        },
        {
          "ancestorTitles": [
            "Suite de testes da api users..."
          ],
          "duration": 7,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "Suite de testes da api users... Tentativa de cadastrar um novo usuário com e-mail que já existe... de deve retornar messagem de erro",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 1,
          "retryReasons": [],
          "status": "passed",
          "title": "Tentativa de cadastrar um novo usuário com e-mail que já existe... de deve retornar messagem de erro"
        },
        {
          "ancestorTitles": [
            "Suite de testes da api users..."
          ],
          "duration": 7,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "Suite de testes da api users... Criação de usuário com dados inválidos, deve retornar 422 e deve retornar messagem de erro",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 1,
          "retryReasons": [],
          "status": "passed",
          "title": "Criação de usuário com dados inválidos, deve retornar 422 e deve retornar messagem de erro"
        },
        {
          "ancestorTitles": [
            "Suite de testes da api users..."
          ],
          "duration": 9,
          "failureDetails": [
            {
              "matcherResult": {
                "actual": 404,
                "expected": 200,
                "message": "\u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoBe\u001b[2m(\u001b[22m\u001b[32mexpected\u001b[39m\u001b[2m) // Object.is equality\u001b[22m\n\nExpected: \u001b[32m200\u001b[39m\nReceived: \u001b[31m404\u001b[39m",
                "name": "toBe",
                "pass": false
              }
            }
          ],
          "failureMessages": [
            "Error: \u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoBe\u001b[2m(\u001b[22m\u001b[32mexpected\u001b[39m\u001b[2m) // Object.is equality\u001b[22m\n\nExpected: \u001b[32m200\u001b[39m\nReceived: \u001b[31m404\u001b[39m\n    at Object.toBe (C:\\Users\\pflav\\gitHub\\pats_disciplina_api_01\\primeiro-teste\\test\\test-users.test.js:90:33)\n    at processTicksAndRejections (node:internal/process/task_queues:95:5)"
          ],
          "fullName": "Suite de testes da api users... Deve consultar um usuário cadastrado anteriormente, e logar o registro do usuário cadastrado com o retornado",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 0,
          "retryReasons": [],
          "status": "failed",
          "title": "Deve consultar um usuário cadastrado anteriormente, e logar o registro do usuário cadastrado com o retornado"
        }
      ],
      "failureMessage": "\u001b[1m\u001b[31m  \u001b[1m● \u001b[22m\u001b[1mSuite de testes da api users... › Deve cadastrar um novo usuário e deve retornar status 201\u001b[39m\u001b[22m\n\n    \u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoHaveProperty\u001b[2m(\u001b[22m\u001b[32mpath\u001b[39m\u001b[2m)\u001b[22m\n\n    Expected path: \u001b[32m\"id\"\u001b[39m\n    Received path: \u001b[31m[]\u001b[39m\n\n    Received value: \u001b[31m{\"error\": \"E-mail já está em uso\"}\u001b[39m\n\u001b[2m\u001b[22m\n\u001b[2m    \u001b[0m \u001b[90m 57 |\u001b[39m             \u001b[33m.\u001b[39msend(jsonUsuario\u001b[33m.\u001b[39mjson_arquivo_cadastro_usuario)\u001b[33m;\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 58 |\u001b[39m         console\u001b[33m.\u001b[39mlog(response\u001b[33m.\u001b[39mbody)\u001b[33m;\u001b[39m\u001b[22m\n\u001b[2m    \u001b[31m\u001b[1m>\u001b[22m\u001b[2m\u001b[39m\u001b[90m 59 |\u001b[39m         expect(response\u001b[33m.\u001b[39mbody)\u001b[33m.\u001b[39mtoHaveProperty(\u001b[32m\"id\"\u001b[39m)\u001b[33m;\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m    |\u001b[39m                               \u001b[31m\u001b[1m^\u001b[22m\u001b[2m\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 60 |\u001b[39m         idUsuario \u001b[33m=\u001b[39m response\u001b[33m.\u001b[39mbody\u001b[33m.\u001b[39mid\u001b[33m;\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 61 |\u001b[39m         console\u001b[33m.\u001b[39mlog(\u001b[32m\"Usuário cadastradfo: \"\u001b[39m\u001b[33m,\u001b[39m idUsuario)\u001b[33m;\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 62 |\u001b[39m         expect(response\u001b[33m.\u001b[39mstatus)\u001b[33m.\u001b[39mtoBe(\u001b[35m201\u001b[39m)\u001b[33m;\u001b[39m\u001b[0m\u001b[22m\n\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat Object.toHaveProperty (\u001b[22m\u001b[2m\u001b[0m\u001b[36mtest/test-users.test.js\u001b[39m\u001b[0m\u001b[2m:59:31)\u001b[22m\u001b[2m\u001b[22m\n\n\u001b[1m\u001b[31m  \u001b[1m● \u001b[22m\u001b[1mSuite de testes da api users... › Deve consultar um usuário cadastrado anteriormente, e logar o registro do usuário cadastrado com o retornado\u001b[39m\u001b[22m\n\n    \u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoBe\u001b[2m(\u001b[22m\u001b[32mexpected\u001b[39m\u001b[2m) // Object.is equality\u001b[22m\n\n    Expected: \u001b[32m200\u001b[39m\n    Received: \u001b[31m404\u001b[39m\n\u001b[2m\u001b[22m\n\u001b[2m    \u001b[0m \u001b[90m 88 |\u001b[39m         \u001b[36mconst\u001b[39m response \u001b[33m=\u001b[39m \u001b[36mawait\u001b[39m request(rota)\u001b[22m\n\u001b[2m     \u001b[90m 89 |\u001b[39m             \u001b[33m.\u001b[39m\u001b[36mget\u001b[39m(\u001b[32m`/users/${idUsuario}`\u001b[39m)\u001b[33m;\u001b[39m\u001b[22m\n\u001b[2m    \u001b[31m\u001b[1m>\u001b[22m\u001b[2m\u001b[39m\u001b[90m 90 |\u001b[39m         expect(response\u001b[33m.\u001b[39mstatus)\u001b[33m.\u001b[39mtoBe(\u001b[35m200\u001b[39m)\u001b[33m;\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m    |\u001b[39m                                 \u001b[31m\u001b[1m^\u001b[22m\u001b[2m\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 91 |\u001b[39m         console\u001b[33m.\u001b[39mlog(response\u001b[33m.\u001b[39mbody)\u001b[33m;\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 92 |\u001b[39m         console\u001b[33m.\u001b[39mlog(response\u001b[33m.\u001b[39mstatus)\u001b[33m;\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 93 |\u001b[39m     })\u001b[33m;\u001b[39m\u001b[0m\u001b[22m\n\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat Object.toBe (\u001b[22m\u001b[2m\u001b[0m\u001b[36mtest/test-users.test.js\u001b[39m\u001b[0m\u001b[2m:90:33)\u001b[22m\u001b[2m\u001b[22m\n"
    },
    {
      "leaks": false,
      "numFailingTests": 0,
      "numPassingTests": 6,
      "numPendingTests": 0,
      "numTodoTests": 0,
      "openHandles": [],
      "perfStats": {
        "end": 1719543018801,
        "runtime": 10511,
        "slow": true,
        "start": 1719543008290
      },
      "skipped": false,
      "snapshot": {
        "added": 0,
        "fileDeleted": false,
        "matched": 0,
        "unchecked": 0,
        "uncheckedKeys": [],
        "unmatched": 0,
        "updated": 0
      },
      "testFilePath": "C:\\Users\\pflav\\gitHub\\pats_disciplina_api_01\\primeiro-teste\\test\\test-usersV2.test.js",
      "testResults": [
        {
          "ancestorTitles": [
            ""
          ],
          "duration": 11,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": " Cadastrondo um usuário sem senha verificar mensagem de erro.",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 8,
          "retryReasons": [],
          "status": "passed",
          "title": "Cadastrondo um usuário sem senha verificar mensagem de erro."
        },
        {
          "ancestorTitles": [
            ""
          ],
          "duration": 3,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": " Cadastrondo um usuário sem email verificar mensagem de erro.",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 2,
          "retryReasons": [],
          "status": "passed",
          "title": "Cadastrondo um usuário sem email verificar mensagem de erro."
        },
        {
          "ancestorTitles": [
            ""
          ],
          "duration": 3,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": " Cadastrondo um usuário sem telefone verificar mensagem de erro.",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 2,
          "retryReasons": [],
          "status": "passed",
          "title": "Cadastrondo um usuário sem telefone verificar mensagem de erro."
        },
        {
          "ancestorTitles": [
            ""
          ],
          "duration": 3,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": " Cadastrondo um usuário sem nome verificar mensagem de erro.",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 2,
          "retryReasons": [],
          "status": "passed",
          "title": "Cadastrondo um usuário sem nome verificar mensagem de erro."
        },
        {
          "ancestorTitles": [
            ""
          ],
          "duration": 23,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": " Validar a deleção de um usuário.",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 4,
          "retryReasons": [],
          "status": "passed",
          "title": "Validar a deleção de um usuário."
        },
        {
          "ancestorTitles": [
            ""
          ],
          "duration": 27,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": " Validar a alteração de um usuário.",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 10,
          "retryReasons": [],
          "status": "passed",
          "title": "Validar a alteração de um usuário."
        }
      ],
      "failureMessage": null
    }
  ],
  "wasInterrupted": false
}