Abrir o projeto no VSCode
Abri um terminal na pasta raiz do projeto e executar o comando "npm install" também executar esse comando dentro da pasta "backend\"

PS C:\Users\pflav\gitHub\pats_disciplina_api_01> cd .\backend\
PS C:\Users\pflav\gitHub\pats_disciplina_api_01\backend> npm install
PS C:\Users\pflav\gitHub\pats_disciplina_api_01\backend> npm install --save-dev supertest supertest-session

PS C:\Users\pflav\gitHub\pats_disciplina_api_01\backend> npm install jest supertest

PS C:\Users\pflav\gitHub\pats_disciplina_api_01\backend> cd ..
PS C:\Users\pflav\gitHub\pats_disciplina_api_01> npm install               

PS C:\Users\pflav\gitHub\pats_disciplina_api_01> cd .\backend\

-----------------------------------------------------
Para rodar o projeto node app.js

PS C:\Users\pflav\gitHub\pats_disciplina_api_01\backend> node app.js


--------------------------------------------------
Para executar os testes  "npm run test"
PS C:\Users\pflav\gitHub\pats_disciplina_api_01\primeiro-teste> npm run test


---------------------------------------------------
Instalar dependência para criar relatórios - Também instalar o Live Server para funcionar
Instalar na raiz do projeto de testes 
npm install jest-stare --save-dev
colocar configuração no arquivo jest.config.js pode pegar na página de configuração do jest-stare


  reporters: [
    "default",
    ["jest-stare",
      {
        resultDir: "results/jest-stare",
        reportTitle: "jest-stare!",
        additionalResultsProcessors: ["jest-junit"],
        coverageLink: "../../coverage/lcov-report/index.html",
        jestStareConfigJson: "jest-stare.json",
        jestGlobalConfigJson: "globalStuff.json"
      }]]

-------------------------------
Instalar biblioteca para geração de dados randominicos]
Instalar dentro do projeto de testes 
npm i @faker-js/faker --save-dev
----------------------------------
Instalar a extenção Live Servere
executar o projeto e ver se criou a pasta gollive
 